import java.io.*;
import java.util.*;

public class Main{
   public static void main(String[] args) throws Exception {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        String exp = br.readLine();

        // code
        Stack<Integer> values = new Stack<>();
        Stack<String> infix = new Stack<>();
        Stack<String> postfix = new Stack<>();

        for(int i = exp.length() - 1; i >= 0; i--){
            char ch = exp.charAt(i);

            if(ch == '-' || ch == '+' || ch == '*' || ch == '/'){
                evaluateVals(ch, values);
                infixEvaluate(ch, infix);
                postEvaluate(ch, postfix);


            }else if(ch >= '0' && ch <= '9'){
                values.push(ch - '0');
                infix.push(ch +"");
                postfix.push(ch+"");
            }
        }

        System.out.println(values.peek());
        System.out.println(infix.peek());
        System.out.println(postfix.peek());
    }

    static void evaluateVals(char op, Stack<Integer> values){
        int v1 = values.pop();
        int v2 = values.pop();

        if(op == '+'){
            values.push(v1 + v2);
        }else if(op == '-'){
            values.push(v1 - v2);
        }else if(op == '*'){
            values.push(v1 * v2);
        }else{
            values.push(v1 / v2);
        }
    }

    static void infixEvaluate(char op, Stack<String> infix){
        String v1 = infix.pop();
        String v2 = infix.pop();

        infix.push("(" + v1 + op + v2 + ")");
    }
    
    static void postEvaluate(char op, Stack<String> postfix){
        String v1 = postfix.pop();
        String v2 = postfix.pop();

        postfix.push(v1 + v2 + op);
    }
}
